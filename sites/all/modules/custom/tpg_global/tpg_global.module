<?php

/**
 * @file
 * Code for the TPG Global.
 */

/**
 * Implements hook_node_view_alter().
 */
function tpg_global_node_view_alter(&$build) {

  // Adding read more to Linked Entity nodes.
  if ($build['#view_mode'] == 'overview') {
    $node = $build['#node'];
    $links=array();
    $links['node-readmore'] = array(
      'title' => t('> read more'),
      'href' => 'node/' . $node->nid,
      'html' => TRUE,
      'attributes' => array('rel' => 'tag', 'class' => array('entity-read-more')),
    );
    // Assign links
    $build['links']['node']['#links']=$links;
  }
}

/**
 * Implements hook_views_query_alter().
 */
function tpg_global_views_query_alter(&$view, &$query) {
}

/**
 * Implements hook_views_pre_render().
 */
function tpg_global_views_pre_render(&$view) {

  // Related Activities view alter.
  if ($view->name == 'related_activities') {

    $related_nodes = array();
    $node = menu_get_object('node');

    foreach ($node->field_paragraphs_content['und'] as $key => $paragraph_item) {
      // Loading paragraphs bundle from automated id.
      $data = paragraphs_item_load($paragraph_item['value']);
      // Fetching Related Activities node nids.
      if ($data->bundle == 'related_activities') {
        foreach ($data->field_related_activities['und'] as $key => $related_activities) {
          $related_nodes[] = $related_activities['target_id'];
        }
      }
    }
    foreach ($view->result as $key => $value) {
      // Removing unrelated nodes.
      if (!in_array($value->nid, $related_nodes)) {
        unset($view->result[$key]);
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tpg_global_form_paragraphs_page_node_form_alter(&$form, &$form_state, $form_id) {
  // Adding range of weights.
  $range = array();
  for ($i = -20; $i <= 20; ++$i) {
    $range[$i] = $i;
  }
  $form['field_homepage_weight']['und']['#options'] = $range;
  $form['field_homepage_weight']['und']['#default_value'] = 0;
}

